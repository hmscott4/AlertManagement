<?xml version="1.0" encoding="utf-8" ?>
<config version="2.0">
<!-- This congfiguration file governs the assignment of Alert Resolution State in the Escalation Alert rule -->
<!-- This file is broken into three main sections: -->
<!-- alertStormRules -->
<!-- rules -->
<!-- exceptions -->
  <alertStormRules>
    <!-- Alert Storm rules are used to detect Alert Storms and assign individual alerts to Resolution State 18 -->
    <!-- The key elements to maintain: -->
    <!--   Property: Property of the alert to group by. -->
    <!--   Criteria: Alerts to be found -->
    <!--   Count: The number of alerts that will trigger an Alert Storm threshold -->
    <!--   Window: The number of minutes to "look back"  -->
    <!--   NewResolutionState: Currently fixed at 18; this may be made flexible in the future.  Alerts matching Alert storm criteria will be updated to this resolution state. -->
    <!--   Comment: Comment that is appended to the history of the alert. -->
    <!-- -->
    <!-- Altogether, this translates (more or less) to: -->
    <!--   When the number of alerts grouped by [Property] within the last [Window] minutes exceeds [Count], then we have an alert storem."-->
    <stormRule name="Alert Count by Name" enabled="true">
      <Sequence>100</Sequence>
      <Property>Name</Property>
      <Criteria><![CDATA[ResolutionState<>255]]></Criteria>
      <Count>10</Count>
      <Window>5</Window>
      <NewResolutionState>18</NewResolutionState>
      <Comment><![CDATA[Alert updated by the alert automation: Alert Storm]]></Comment>
    </stormRule>
    <stormRule name="Alert count by MonitoringObjectId" enabled="true">
      <Sequence>101</Sequence>
      <Property>MonitoringObjectId</Property>
      <Criteria><![CDATA[ResolutionState<>255]]></Criteria>
      <Count>10</Count>
      <Window>5</Window>
      <NewResolutionState>18</NewResolutionState>
      <Comment><![CDATA[Alert updated by the alert automation: Alert Storm]]></Comment>
    </stormRule>
  </alertStormRules>
  <rules>
    <!--  When not part of an Alert Storm, resolution state assignment is governed first by Exceptions, then by Rules. -->
    <!--  Rules are used to "route" (assign resolution state) automatically.  They may be enabled or disabled. -->
    <!--  The key elements to maintain: -->
    <!--    Criteria: Text used to find alerts, test with Get-SCOMAlert -Criteria <your criteria> -->
    <!--      Special values: __LastModified__ and __TimeRaised__: these are replaced at Runtime by computing from the elements <LastModifiedAge> and <TimeRaisedAge> -->
    <!--    NewResolutionState: The resolution state to assign to the alert -->
    <!--    PostPipelineFilter: Equivalent to what you would place after the pipeline (|) in a Where-Object clause. -->
    <!--    Comment: Text appended to the history of an alert -->
    <rule name="Close Resolved Alerts: Closed" enabled="true">
      <Category></Category>
      <Description><![CDATA[Close alerts that have been sitting in 'Resolved' state for more than 24 hours]]></Description>
      <Sequence>1</Sequence>
      <Criteria><![CDATA[ResolutionState=254 AND LastModified < '__LastModified__']]></Criteria>
      <NewResolutionState>255</NewResolutionState>
      <LastModifiedAge>1440</LastModifiedAge> 
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Closed]]></Comment>
    </rule>
    <rule name="Update Queue Assigned: Verified" enabled="true">
      <Category></Category>
      <Description><![CDATA[Update manual reset monitor-based alerts to Verified]]></Description>
      <Sequence>2</Sequence>
      <Criteria><![CDATA[ResolutionState=247 AND TimeRaised < '__TimeRaised__' AND IsMonitorAlert=1]]></Criteria>
      <NewResolutionState>15</NewResolutionState>
      <TimeRaisedAge>10</TimeRaisedAge>
      <PostPipelineFilter>( $_.HealthStateSuccess -eq 'ManualResetEventRaised' ) -and ( $_.RepeatCount -gt 0 )</PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Awaiting Evidence]]></Comment>
    </rule>
    <rule name="Update Assigned: Awaiting Evidence" enabled="true">
      <Category></Category>
      <Description><![CDATA[Update manual reset monitor-based alerts to Awaiting Evidence]]></Description>
      <Sequence>3</Sequence>
      <Criteria><![CDATA[( ResolutionState=5 OR ResolutionState = 18 ) AND TimeRaised < '__TimeRaised__' AND IsMonitorAlert=1]]></Criteria>
      <NewResolutionState>247</NewResolutionState>
      <TimeRaisedAge>10</TimeRaisedAge>
      <PostPipelineFilter>( $_.HealthStateSuccess -eq 'ManualResetEventRaised' )</PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Awaiting Evidence]]></Comment>
    </rule>
    <rule name="Update Assigned: Verified" enabled="true">
      <Category></Category>
      <Description><![CDATA[Check for previous alert occurances of monitors with a successful health state of "ManualResetEventRaised".]]></Description>
      <Sequence>3</Sequence>
      <Criteria><![CDATA[ResolutionState=247 AND TimeRaised < '__TimeRaised__' AND IsMonitorAlert=1]]></Criteria>
      <NewResolutionState>15</NewResolutionState>
      <TimeRaisedAge>10</TimeRaisedAge>
      <PostPipelineFilter>
        # If this is a manual reset event
        ( $_.HealthStateSuccess -eq 'ManualResetEventRaised' ) -and
        (
          $_ | ForEach-Object -Process {
            # Ensure the monitor is not in maintenance mode
            if ( -not $_.Monitor.InMaintenanceMode )
            {
              # Get the last alert for this monitor
              $lastClosedAlertTime = $_.Monitor |
                Get-SCOMAlert -ResolutionState 255 |
                Sort-Object -Property TimeResolutionStateLastModified -Descending |
                Select-Object -ExpandProperty TimeResolutionStateLastModified -First 1

              # If the previous alert was closed less than 15 mins before the current alert was opened
              if (
                ( -not [System.String]::IsNullOrEmpty($lastClosedAlertTime) ) -and
                ( $lastClosedAlertTime - $_.TimeRaised ).TotalMinutes -lt 15
              )
              {
                # Move this on to a verified alert
                $true
              }
              else
              {
                # Otherwise reset the alert to determine if this is real or not
                $_.Monitor.ResetMonitoringState($_.UnitMonitor) > $null
              }
            }
          } 
        )
      </PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Moved to verified based on the alert history.]]></Comment>
    </rule>
    <rule name="Update Assigned: Manual Reset" enabled="true">
      <Category></Category>
      <Description><![CDATA[Manually reset monitor-based alerts with a successful health state of "ManualResetEventRaised" after 36 hours]]></Description>
      <Sequence>4</Sequence>
      <Criteria><![CDATA[ResolutionState=247 AND TimeRaised < '__TimeRaised__' AND IsMonitorAlert=1]]></Criteria>
      <NewResolutionState>247</NewResolutionState>
      <TimeRaisedAge>2190</TimeRaisedAge>
      <PostPipelineFilter>
        ( $_.HealthStateSuccess -eq 'ManualResetEventRaised' ) -and
        ( $_ | ForEach-Object -Process { $_.Monitor.ResetMonitoringState($_.UnitMonitor) > $null } )
      </PostPipelineFilter>
            <Comment><![CDATA[Alert updated by the alert automation: Manually reset the monitor.]]></Comment>
    </rule>
    <rule name="Update Assigned: Verified" enabled="true">
      <Category></Category>
      <Description><![CDATA[Update Monitor-based alerts to Verifed]]></Description>
      <Sequence>5</Sequence>
      <Criteria><![CDATA[ResolutionState=5 AND TimeRaised < '__TimeRaised__' AND IsMonitorAlert=1]]></Criteria>
      <NewResolutionState>15</NewResolutionState>
      <TimeRaisedAge>10</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Verified]]></Comment>
    </rule>
    <rule name="Update Awaiting Evidence: Verified" enabled="true"> 
      <Category></Category>
      <Description><![CDATA[Update alerts from Awaiting Evidence to Verified]]></Description>
      <Sequence>6</Sequence>
      <Criteria><![CDATA[ResolutionState=247 AND LastModified < '__LastModified__' AND IsMonitorAlert=0]]></Criteria>
      <NewResolutionState>15</NewResolutionState>
      <LastModifiedAge>10</LastModifiedAge>
      <PostPipelineFilter>$_.RepeatCount -gt 0</PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Verified]]></Comment>
    </rule>
    <rule name="Update Assigned: Awaiting Evidence" enabled="true">
      <Category></Category>
      <Description><![CDATA[Update Rule-based alerts to Awaiting Evidence]]></Description>
      <Sequence>7</Sequence>
      <Criteria><![CDATA[ResolutionState=5 AND TimeRaised < '__TimeRaised__' AND IsMonitorAlert=0]]></Criteria>
      <NewResolutionState>247</NewResolutionState>
      <TimeRaisedAge>10</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Awaiting Evidence]]></Comment>
    </rule>
    <rule name="Update Rule: Closed" enabled="true"> 
      <Category></Category>
      <Description><![CDATA[Update alerts to Closed if no update after 36 hours]]></Description>
      <Sequence>8</Sequence>
      <Criteria><![CDATA[( ResolutionState != 0 AND ResolutionState != 5 AND ResolutionState != 255 ) AND LastModified < '__LastModified__' AND IsMonitorAlert=0]]></Criteria>
      <NewResolutionState>255</NewResolutionState>
      <LastModifiedAge>2190</LastModifiedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Closed]]></Comment>
    </rule>            
  </rules>
  <exceptions>
    <!--  When not part of an Alert Storm, resolution state assignment is governed first by Exceptions, then by Rules. -->
    <!--  Exceptions are processed first and have more specific criteria than rules.  -->
    <!--  Like rules, exceptions are used to "route" (assign resolution state) automatically.  They may be enabled or disabled. -->
    <!--  The key elements to maintain: -->
    <!--    Criteria: Text used to find alerts, test with Get-SCOMAlert -Criteria <your criteria> -->
    <!--      Special values: __LastModified__ and __TimeRaised__: these are replaced at Runtime by computing from the elements <LastModifiedAge> and <TimeRaisedAge> -->
    <!--    NewResolutionState: The resolution state to assign to the alert -->
    <!--    PostPipelineFilter: Equivalent to what you would place after the pipeline (|) in a Where-Object clause. -->
    <!--    Comment: Text appended to the history of an alert -->
    
    <!-- Notes: Some of the examples here (which are disabled) are used to route selected alerts to a Resolution State of 50. -->
    <!--   These examples are part of a solution that is used to automatically generate Service Desk tickets for specific alerts. -->
    <exception name="SQL Server Agent Windows Stopped" enabled="false">
      <Category>MSSQL Server</Category>
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>1</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Name LIKE '%SQL Server Agent Windows Stopped%' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>
    <exception name="SQL Server Service Stopped" enabled="false">
      <Category>MSSQL Server</Category>
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>2</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Name LIKE '%SQL Server Service Stopped%' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>
    <exception name="SQL Server Integration Services Windows Service Stopped" enabled="false">
      <Category>MSSQL Server</Category>
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>3</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Name LIKE '%SQL Server Integration Services Windows Service Stopped%' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>
    <exception name="Filegroup is running out of space" enabled="false"> 
      <Category>MSSQL Server</Category>
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>4</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Severity=2 AND Name LIKE '%Filegroup is running out of space%' AND MonitoringObjectFullName NOT LIKE '%tempdb%' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>
    <exception name="DB Log File is running out of space" enabled="false">
      <Category>MSSQL Server</Category>
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>5</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Severity=2 AND (Name LIKE '%DB Log File is running out of space%' OR Name LIKE '%Log files are running out of space%') AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>
    <exception name="Database backup should be performed" enabled="false">
      <Category></Category>="MSSQL Server"
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>5</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Severity=2 AND Name LIKE '%Database backup should be performed%' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>
    <exception name="NTFS reported the logical disk is in error or corrupt" enabled="false">
      <Category>Windows Server</Category>
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>6</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Name='NTFS reported the logical disk is in error or corrupt.' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>
    <exception name="Logical Disk Free Space is low" enabled="false">
      <Category>Windows Server</Category>
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>6</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Name='Logical Disk Free Space is low' AND MonitoringObjectName='C:' AND Severity=2 AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>
    <exception name="Certificate lifespan alert" enabled="false">
      <Category>PKI Certificate</Category>
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>7</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Name='Certificate lifespan alert' AND Severity=2 AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>
    <exception name="SQL Server cannot authenticate using Kerberos because the Service Principal Name" enabled="false">
      <Category>MSSQL Server</Category>
      <Description><![CDATA[Generate Service Desk Incident]]></Description>
      <Sequence>8</Sequence>
      <Criteria><![CDATA[ResolutionState=15 AND Name LIKE 'SQL Server cannot authenticate using Kerberos because the Service Principal Name%' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>50</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Create SD Incident (auto)]]></Comment>
    </exception>          
    <exception name="The Domain Controller has been started" enabled="false">
      <Category>Active Directory</Category>
      <Sequence>9</Sequence>
      <Criteria><![CDATA[ResolutionState=5 AND Name='The Domain Controller has been started' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>254</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Resolved]]></Comment>
      <CheckHealth>false</CheckHealth>
    </exception>
    <exception name="The Domain Controller has been stopped" enabled="false">
      <Category>Active Directory</Category>
      <Sequence>10</Sequence>
      <Criteria><![CDATA[ResolutionState=5 AND Name='The Domain Controller has been stopped' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>254</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Resolved]]></Comment>
      <CheckHealth>false</CheckHealth>
    </exception>
    <exception name="Cluster Resource Failed" enabled="true">
      <Category>MS Cluster</Category>
      <Sequence>11</Sequence>
      <Criteria><![CDATA[ResolutionState=5 AND Name='Cluster Resource Failed' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>254</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Resolved]]></Comment>
      <CheckHealth>true</CheckHealth>
    </exception>
    <exception name="Unable to access witness resource" enabled="true">
      <Category>MS Cluster</Category>
      <Sequence>12</Sequence>
      <Criteria><![CDATA[ResolutionState=5 AND Name='Unable to access witness resource' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>254</NewResolutionState>
      <TimeRaisedAge>30</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Resolved]]></Comment>
      <CheckHealth>true</CheckHealth>
    </exception>
    <exception name="Application Pool worker process is unresponsive" enabled="false">
        <Category>IIS</Category>
        <Sequence>13</Sequence>
        <Criteria><![CDATA[ResolutionState=5 AND Name='Application Pool worker process is unresponsive' AND TimeRaised < '__TimeRaised__']]></Criteria>
        <NewResolutionState>255</NewResolutionState>
        <TimeRaisedAge>1440</TimeRaisedAge>
        <PostPipelineFilter></PostPipelineFilter>
        <Comment><![CDATA[Alert updated by the alert automation: Closed]]></Comment>
        <CheckHealth>true</CheckHealth>
    </exception>
    <exception name="Cluster network is down" enabled="false">
        <Category>MS Cluster</Category>
        <Sequence>14</Sequence>
        <Criteria><![CDATA[ResolutionState=5 AND Name='Cluster network is down' AND TimeRaised < '__TimeRaised__']]></Criteria>
        <NewResolutionState>255</NewResolutionState>
        <TimeRaisedAge>1440</TimeRaisedAge>
        <PostPipelineFilter></PostPipelineFilter>
        <Comment><![CDATA[Alert updated by the alert automation: Resolved]]></Comment>
        <CheckHealth>true</CheckHealth>
    </exception>
    <exception name="Communication was lost and reestablished between cluster nodes" enabled="false">
        <Category>MS Cluster</Category>
        <Sequence>15</Sequence>
        <Criteria><![CDATA[ResolutionState=5 AND Name='Communication was lost and reestablished between cluster nodes' AND TimeRaised < '__TimeRaised__']]></Criteria>
        <NewResolutionState>255</NewResolutionState>
        <TimeRaisedAge>1440</TimeRaisedAge>
        <PostPipelineFilter></PostPipelineFilter>
        <Comment><![CDATA[Alert updated by the alert automation: Resolved]]></Comment>
        <CheckHealth>true</CheckHealth>
    </exception>
    <exception name="Application Pool worker process terminated unexpectedly" enabled="false">
        <Category>IIS</Category>
        <Sequence>16</Sequence>
        <Criteria><![CDATA[ResolutionState=5 AND Name='Application Pool worker process terminated unexpectedly' AND TimeRaised < '__TimeRaised__']]></Criteria>
        <NewResolutionState>255</NewResolutionState>
        <TimeRaisedAge>1440</TimeRaisedAge>
        <PostPipelineFilter></PostPipelineFilter>
        <Comment><![CDATA[Auto close by the alert automation.]]></Comment>
        <CheckHealth>true</CheckHealth>
    </exception>
    <exception name="Alert storm detected" enabled="true">
      <Category>Monitoring</Category>
      <Sequence>17</Sequence>
      <Criteria><![CDATA[ResolutionState <> 255 AND Name LIKE 'Alert Storm Detected:%']]></Criteria>
      <NewResolutionState>15</NewResolutionState>
      <TimeRaisedAge>0</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Verified]]></Comment>
      <CheckHealth>false</CheckHealth>
    </exception>
    <exception name="MSSQL on Windows: Discovery error" enabled="true">
      <Category>MSSQL Server</Category>
      <Sequence>18</Sequence>
      <Criteria><![CDATA[ResolutionState=247 AND Name='MSSQL on Windows: Discovery error' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>255</NewResolutionState>
      <TimeRaisedAge>10</TimeRaisedAge>
      <PostPipelineFilter>$_.RepeatCount -lt 10</PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Closed]]></Comment>
      <CheckHealth>true</CheckHealth>
    </exception>
    <exception name="MSSQL on Windows: Monitoring error" enabled="true">
      <Category>MSSQL Server</Category>
      <Sequence>19</Sequence>
      <Criteria><![CDATA[ ( ResolutionState=15 OR ResolutionState=247 ) AND Name='MSSQL on Windows: Monitoring error' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>255</NewResolutionState>
      <TimeRaisedAge>10</TimeRaisedAge>
      <PostPipelineFilter>$_.RepeatCount -lt 15</PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Closed]]></Comment>
      <CheckHealth>true</CheckHealth>
    </exception>
    <exception name="Power Shell Script failed to run" enabled="true">
      <Category>SCOM</Category>
      <Sequence>20</Sequence>
      <Criteria><![CDATA[ResolutionState=247 AND Name='Power Shell Script failed to run' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>255</NewResolutionState>
      <TimeRaisedAge>10</TimeRaisedAge>
      <PostPipelineFilter>$_.RepeatCount -lt 10</PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Closed]]></Comment>
      <CheckHealth>true</CheckHealth>
    </exception>
    <exception name="Windows Shutdown/Restart Event Detected" enabled="true">
      <Category>Windows Server</Category>
      <Sequence>21</Sequence>
      <Criteria><![CDATA[ ( ResolutionState=5 OR ResolutionState=247 ) AND Name='Windows Shutdown/Restart Event Detected' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>15</NewResolutionState>
      <TimeRaisedAge>0</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Verified]]></Comment>
    </exception>
    <exception name="Database Mirror is not Synchronized" enabled="true">
      <Category>MSSQL Server</Category>
      <Sequence>22</Sequence>
      <Criteria><![CDATA[ResolutionState=5 AND Name='Database Mirror is not Synchronized' AND AlertParams NOT LIKE '%SYNCHRONIZING%' AND TimeRaised < '__TimeRaised__']]></Criteria>
      <NewResolutionState>247</NewResolutionState>
      <TimeRaisedAge>0</TimeRaisedAge>
      <PostPipelineFilter></PostPipelineFilter>
      <Comment><![CDATA[Alert updated by the alert automation: Closed]]></Comment>
      <CheckHealth>true</CheckHealth>
    </exception>
  </exceptions>
</config>
